# common setting
spring:
  application:
    name: MqProjectionService

  main:
    web-application-type: servlet
  docker:
    compose:
      enabled: false

  cloud:
    function:
      definition: ticket
    stream:
      defaultBinder: kafka
      bindings:
        ticket-in-0:
          destination: ticket.exchange
          group: ticketSqlSync  
          contentType: application/json
          consumer:
            #Receiver retry
            maxAttempts: 3
            backOffInitialInterval: 1000
            backOffMultiplier: 2.0
            backOffMaxInterval: 10000
            # Concurrent consumer Setting, 6 threads, 3 server, 2 thread each
            concurrency: ${KAFKA_CONSUMER_CONCURRENCY:6}
            # Start from earliest to catch all messages
            startOffset: earliest
      kafka:
        binder:
          brokers: ${KAFKA_BROKERS:kafka-1:9092,kafka-2:9092,kafka-3:9092}
          # Auto create topic with correct partitions to match producer
          autoCreateTopics: true
          autoAddPartitions: true
          # Kafka fetch setting
          consumer-properties:
            fetch.min.bytes: 50000 #pull  size 50KB
            fetch.max.wait.ms: 500  # Wait time for each pull
            max.poll.records: 500 # max messages per pull
            #Timeout setting
            session.timeout.ms: 30000     # consumer communication timeout
            heartbeat.interval.ms: 3000   # heartbeat check
            max.poll.interval.ms: 300000  # Max processing period
        bindings:
          ticket-in-0:
            consumer:
              # Ensure consumer can handle 3 partitions
              configuration:
                auto.offset.reset: earliest

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: ${SPRING_DS_MIN_IDLE:5}
      maximum-pool-size: ${SPRING_DS_MAX_POOL:20}
      connection-timeout: ${SPRING_DS_CONN_TIMEOUT:30000}

  # this is for SQL default data start
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
      continue-on-error: true
      separator: ";"

logging:
  file:
    name: ./logs/ticketing-platform.log
  level:
    root: INFO
    org.java.mqprojectionservice: DEBUG
    org.springframework.jdbc.datasource.init: DEBUG
    org.springframework.boot.sql.init: DEBUG
    org.springframework.jdbc: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      probes:
        enabled: true
