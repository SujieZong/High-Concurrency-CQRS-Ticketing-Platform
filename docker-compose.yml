# docker-compose.yml 放在项目根目录，与 TicketingPlatform/、RabbitCombinedConsumer/ 平级
services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  dynamodb:
    image: amazon/dynamodb-local
    ports:
      - "8000:8000"
    command: [ "-jar","DynamoDBLocal.jar","-sharedDb" ] #share across regions


  # —— API ——
  # —— Purchase Service —— Redis, Dynamo, Rabbit
  purchase-service:
    build:
      context: ./PurchaseService
      dockerfile: Dockerfile
    image: purchase-service:latest
    ports:
      - "8080:8080"

    environment:
      SPRING_PROFILES_ACTIVE: docker

      # Redis
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379

      # RabbitMQ
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

      # DynamoDB Local
      AWS_DYNAMODB_END_POINT: http://dynamodb:8000
      AWS_DYNAMODB_REGION: us-west-2
      AWS_DYNAMODB_ACCESS_KEY: id
      AWS_DYNAMODB_ACCESS_PASS: key

      # MySQL
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/ticket_platform?serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Qweasd123

      # Hikar pool setting
      SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: 5
      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: 20
      SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: 30000

      MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED: "true"
      MANAGEMENT_HEALTH_TALKATIVENESS_ENABLED: "true"
      MANAGEMENT_HEALTH_READINESS_ENABLED: "true"
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: "always"


  # —— Query Service —— MySQL
  query-service:
    build:
      context: ./QueryService
      dockerfile: Dockerfile
    image: query-service:latest
    ports:
      - "8081:8080"

    environment:
      # MySQL
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/ticket_platform?serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Qweasd123

      MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED: "true"
      MANAGEMENT_HEALTH_TALKATIVENESS_ENABLED: "true"
      MANAGEMENT_HEALTH_READINESS_ENABLED: "true"
      MANAGEMENT_HEALTH_REDIS_ENABLED: "false"
      MANAGEMENT_HEALTH_RABBIT_ENABLED: "false"

      # Hikar pool setting
      SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: 5
      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: 20
      SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: 30000


  # —— Consumer —— MySQL, Rabbit
  rabbit-consumer:
    build:
      context: ./RabbitCombinedConsumer
      dockerfile: Dockerfile
    image: rabbit-consumer:latest
    container_name: rabbit-consumer

    environment:
      SPRING_PROFILES_ACTIVE: docker

      # RabbitMQ
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

      # MySQL
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/ticket_platform?serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Qweasd123

      MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED: "true"
      MANAGEMENT_HEALTH_LIVENESSSTATE_ENABLED: "true"
      MANAGEMENT_HEALTH_READINESSSTATE_ENABLED: "true"

